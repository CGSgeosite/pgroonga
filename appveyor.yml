version: "{build}"
clone_depth: 10
environment:
  POSTGRESQL_VERSION: 9.6.1-1
  GROONGA_VERSION: 6.1.1
notifications:
  - provider: Email
    to:
      - groonga-commit@lists.osdn.me
    on_build_status_changed: true
install:
  - set PATH=C:\Ruby23-x64\bin;%PATH%
  - set PATH=C:\msys64\usr\bin;%PATH%
  - gem install test-unit
build_script:
  - git submodule update --init
  - cd ..
  - choco install -y curl 7zip.commandline

  # PostgreSQL
  - curl -O http://get.enterprisedb.com/postgresql/postgresql-%POSTGRESQL_VERSION%-windows-x64-binaries.zip
  - 7z x postgresql-%POSTGRESQL_VERSION%-windows-x64-binaries.zip > nul

  - cd pgroonga

  # Groonga
  #   Released version:
  - curl -O http://packages.groonga.org/source/groonga/groonga-%GROONGA_VERSION%.zip
  - 7z x groonga-%GROONGA_VERSION%.zip > nul
  - mv groonga-%GROONGA_VERSION% vendor\groonga
  #   Unreleased version:
  # - git clone --depth 1
  #     https://github.com/groonga/groonga.git
  #     vendor\groonga
  # - cd vendor\groonga
  # - git submodule update --init
  # - cd vendor
  # - ruby download_mecab.rb
  # - ruby download_message_pack.rb
  # - ruby download_lz4.rb
  # - cd ..\..\..

  - cmake . -G "Visual Studio 12 2013 Win64"
      -DCMAKE_INSTALL_PREFIX="..\\pgsql"
      -DGRN_LOCK_TIMEOUT=900000
      -DGRN_WITH_MRUBY=yes
      -DGRN_WITH_BUNDLED_MECAB=yes
      -DGRN_WITH_BUNDLED_LZ4=yes
      -DGRN_WITH_BUNDLED_MESSAGE_PACK=yes
  - cmake --build . --config Debug
  - cmake --build . --config Debug --target Install

test_script:
  - find sql/* -type d | sed -e 's,^sql,results,' | xargs mkdir -p
  - find sql -name '*.sql' |
      sed -e 's,^sql/,test:\ ,g' |
      sed -e 's,\.sql$,,g' > schedule
  - ps: Set-Culture ja-JP
  - ..\pgsql\bin\pg_regress
      --bindir=..\pgsql\bin
      --load-extension=pgroonga
      --temp-instance=..\pgsql\test
      --schedule=schedule ||
    (type regression.diffs & nonexistent_command)
  - ruby test\run-test.rb
